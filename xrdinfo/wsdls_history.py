#!/usr/bin/python3

import argparse
import json
import re
import os

HISTORY_HTML_TEMPL = u"""<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>History</title>
<link rel="stylesheet"
  href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
</head>
<body>
<div class="container">
<h1>History</h1>
{body}</div>
</body>
</html>
"""


def sort_by_time(item):
    return item['reportTime']


def get_report_names(path, file_type):
    results = []
    for file_name in os.listdir(path):
        s = re.search(
            '^index_(\\d{{4}})(\\d{{2}})(\\d{{2}})(\\d{{2}})(\\d{{2}})(\\d{{2}})\\.{}$'.format(
                file_type), file_name)
        if s:
            results.append({
                'reportTime': '{}-{}-{} {}:{}:{}'.format(
                    s.group(1), s.group(2), s.group(3), s.group(4), s.group(5), s.group(6)),
                'reportPath': file_name})
    results.sort(key=sort_by_time, reverse=True)
    return results


def main():
    parser = argparse.ArgumentParser(
        description='Recreate history files generated by xrd_all_methods.py',
        formatter_class=argparse.RawDescriptionHelpFormatter
    )
    parser.add_argument('path', metavar='PATH', help='Path to the reports')
    parser.add_argument('--html', action='store_true', help='Recreate history.html')
    parser.add_argument('--json', action='store_true', help='Recreate history.json')
    args = parser.parse_args()

    if not os.path.exists(args.path):
        print(u'Directory not found "{}"'.format(args.path))
        exit(1)

    do_html = False
    if args.html:
        do_html = True

    do_json = False
    if args.json:
        do_json = True

    if not do_html and not do_json:
        print('Specify which history files to recreate!\n')
        parser.print_help()
        exit(0)

    if do_html:
        html_names = get_report_names(args.path, 'html')
        html_items = ''
        for item in html_names:
            html_items += '<p><a href="{}">{}</a></p>\n'.format(
                item['reportPath'], item['reportTime'])
        if html_items:
            html = HISTORY_HTML_TEMPL.format(body=html_items)
            with open(u'{}/history.html'.format(args.path), 'w') as f:
                f.write(html)
            print('Writing {} items to {}/history.html'.format(len(html_names), args.path))
        else:
            print('No HTML reports files found in directory: {}'.format(args.path))

    if do_json:
        json_names = get_report_names(args.path, 'json')
        if len(json_names):
            with open(u'{}/history.json'.format(args.path), 'w') as f:
                json.dump(json_names, f, indent=2, ensure_ascii=False)
            print('Writing {} items to {}/history.json'.format(len(json_names), args.path))
        else:
            print('No JSON reports files found in directory: {}'.format(args.path))


if __name__ == '__main__':
    main()
